{"version":3,"file":"index.js","mappings":"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","sources":["webpack://activity-date/./node_modules/classnames/index.js","webpack://activity-date/external window [\"wp\",\"blockEditor\"]","webpack://activity-date/external window [\"wp\",\"blocks\"]","webpack://activity-date/external window [\"wp\",\"coreData\"]","webpack://activity-date/external window [\"wp\",\"data\"]","webpack://activity-date/external window [\"wp\",\"element\"]","webpack://activity-date/webpack/bootstrap","webpack://activity-date/webpack/runtime/compat get default export","webpack://activity-date/webpack/runtime/define property getters","webpack://activity-date/webpack/runtime/hasOwnProperty shorthand","webpack://activity-date/webpack/runtime/make namespace object","webpack://activity-date/./src/index.js"],"sourcesContent":["/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"coreData\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"element\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import classnames from 'classnames';\nimport { registerBlockType } from '@wordpress/blocks';\nimport { useSelect } from '@wordpress/data';\nimport { useEntityProp } from '@wordpress/core-data';\nimport {\n\tAlignmentControl,\n\tBlockControls,\n\tuseBlockProps,\n} from '@wordpress/block-editor';\n\nregisterBlockType( 'willsides/activity-date', {\n\n\tedit( { attributes: { textAlign }, setAttributes } ) {\n        const blockProps = useBlockProps( {\n            className: classnames( {\n                [ `has-text-align-${ textAlign }` ]: textAlign,\n            } ),\n        } );\n        const postType = useSelect(\n            ( select ) => select( 'core/editor' ).getCurrentPostType(),\n            []\n        );\n \n        const [ meta ] = useEntityProp( 'postType', postType, 'meta' );\n        const month = [\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];\n\n        const activity_date = new Date(meta[ 'activity_date' ]);\n        const activity_end_date = new Date(meta[ 'activity_end_date' ]);\n\t\tlet activity_date_tags = ( activity_date.toString()=='Invalid Date' ) ? (\n\t\t\t<span>Invalid Date.</span>\n\t\t) : (\n\t\t\t<time datetime={ activity_date }>\n                { month[activity_date.getUTCMonth()] } { activity_date.getUTCDate() }, { activity_date.getUTCFullYear() }\n            </time>\n\t\t)\n        let end_date_tags = ( activity_end_date.toString()=='Invalid Date' ) ? (\n\t\t\t''\n\t\t) : (\n            <span> - <time datetime={ activity_end_date }>\n                    { month[activity_date.getUTCMonth()] } { activity_end_date.getUTCDate() }, { activity_end_date.getUTCFullYear() }\n            </time></span>\n\t\t)\n\t\tconsole.log(activity_date)\n\n        return (\n            <>\n                <BlockControls group=\"block\">\n                    <AlignmentControl\n                        value={ textAlign }\n                        onChange={ ( nextAlign ) => {\n                            setAttributes( { textAlign: nextAlign } );\n                        } }\n                    />\n                </BlockControls>\n                <div { ...blockProps }>\n                    { activity_date_tags }\n                    { end_date_tags}\n                </div>\n            </>\n        );\n    },\n\n\tsave() {\n        return null;\n    },\n} );\n"],"names":["classnames","registerBlockType","useSelect","useEntityProp","AlignmentControl","BlockControls","useBlockProps","edit","attributes","textAlign","setAttributes","blockProps","className","postType","select","getCurrentPostType","meta","month","activity_date","Date","activity_end_date","activity_date_tags","toString","getUTCMonth","getUTCDate","getUTCFullYear","end_date_tags","console","log","nextAlign","save"],"sourceRoot":""}